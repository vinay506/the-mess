var app = angular.module('app', [

    'ngCookies',
    'ngRoute',
    'ui-notification',
    'ngStorage',
    'ngAnimate',
    'ngSanitize',
    'ui.bootstrap',
    'nya.bootstrap.select',
    'oitozero.ngSweetAlert'
]);
app.config(function($routeProvider, $locationProvider, NotificationProvider) {
    $routeProvider
        .when('/login', {
            templateUrl: '/app/components/login/loginPage.html',
            controller: "loginController",
        })
        .when('/home', {
            templateUrl: '/app/components/home/home.html',
            controller: 'homeController'
        })
        .when('/messDetails', {
            templateUrl: '/app/components/mess-details/messDetails.html',
            controller: 'messDetailsCtrls'
        })
        .when('/pendings', {
            templateUrl: '/app/components/pendings/pendings.html',
            controller: 'pendingsCtrls'
        })
        .otherwise({
            redirectTo: '/login'
        })

    NotificationProvider.setOptions({
        delay: 10000,
        startTop: 20,
        startRight: 10,
        verticalSpacing: 20,
        horizontalSpacing: 20,
        positionX: 'left',
        positionY: 'bottom'
    });

});
app.constant('SERVICEURL', 'http://127.0.0.1:8080/');

/*var app = angular.module('app', ['ui.router']);
app.config(function($stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/login');

    $stateProvider

        // HOME STATES AND NESTED VIEWS ========================================
        .state('login', {
            url: '/login',
            template: 'I could sure use a drink right now.'
        })


});*/
var NavigationService = function($location) {
    var service = {};
    service.navigateTo = function(path) {
        $location.path(path);
    }

    return service;

}
NavigationService.$inject = ['$location'];
app.factory('NavigationService', NavigationService);
app
    // =========================================================================
    // Base controller for common functions
    // =========================================================================
    .controller('mainController', mainController);

function mainController($rootScope, $scope, NavigationService, $localStorage) {

    function init() {
        $scope.message = "your seeing this message because your In mainController";
        console.log("iamin mainController::", $scope.message);
        console.log("iamin mainController::", $localStorage.userName);
        // $state.go('login')
        $rootScope.currentUser = angular.copy($localStorage.userName);
        if ($rootScope.currentUser) {
            NavigationService.navigateTo('/home');
        } else {
            NavigationService.navigateTo('/login');
        }
    }
    init()

};
app
    // =========================================================================
    // Base controller for common functions
    // =========================================================================
    .controller('loginController', loginController);

function loginController($scope, AuthService, NotificationService, cookiesService, NavigationService, ApiService, QueryService) {

    function references() {
        var ref = {};
        ref.setInvalidNotification = function() {
            setInvalidNotification()
        }
        return ref;
    }
    $scope.togglePsw = function() {
        $scope.showpassword = !$scope.showpassword;
    }

    function setInvalidNotification() {
        NotificationService.errorNotification('Please enter valid credentials', 'top', 'right');
        $scope.reset();
    }

    $scope.submit = function() {
        var query = QueryService.prepareBaseUrl('login')
        ApiService.post(query, $scope.login).then(function(response) {
            if (response) {
                AuthService.createSession(response.data, references());
            }
        });

    }

    $scope.reset = function() {
        $scope.login.username = '';
        $scope.login.password = '';
    }

    function isUserLoggedIn() {
        if (cookiesService.getUserName()) {
            NavigationService.navigateTo('/home');
        }
    }

    function init() {
        $scope.showpassword = false;
        $scope.login = {};
        $scope.message = "your seeing this message because your In loginController";
        console.log("iamin loginController::", $scope.message);
        isUserLoggedIn()
    }
    init()

};
var ApiService = function($http) {
    var service = {};

    service.post = function(url, params) {
        return $http.post(url, { params: params });
    }

    service.get = function(url) {
        return $http.get(url);
    }

    return service;

}
ApiService.$inject = ['$http'];
app.factory('ApiService', ApiService);
var CofigService = function(ApiService, $q) {
    var service = {};
    service.getConfig = function(config) {
        var deferred = $q.defer();
        ApiService.get('/dist/json/coreConfig.json').then(successCallback, errorCallback);

        function successCallback(response) {
            deferred.resolve(angular.copy(response.data[config]));
        }

        function errorCallback(error) {
            console.log("response::", error)
        }
        return deferred.promise;
    }
    return service;

}
CofigService.$inject = ['ApiService', '$q'];
app.factory('CofigService', CofigService);
var cookiesService = function($cookies, $localStorage, NavigationService) {
    var service = {};

    service.get = function() {
        var user = (localStorage.userName) ? $cookies.get(localStorage.userName) : false;
        if (user) {
            return true
        }
        return false
    }

    service.setCookies = function(credentials) {
        $cookies.put(credentials.username, credentials.password);
        localStorage.userName = credentials.username;
    }

    service.deleteCookie = function() {
        $cookies.remove(localStorage.userName);
        localStorage.clear();
        NavigationService.navigateTo('/login')
    }

    service.getUserName = function() {
        return localStorage.userName;
    }

    return service;

}
cookiesService.$inject = ['$cookies', '$localStorage', 'NavigationService'];
app.factory('cookiesService', cookiesService);
var AuthService = function(NavigationService, cookiesService) {
    var service = {};

    service.createSession = function(data, ref) {
        if (data && data.length > 0) {
            NavigationService.navigateTo('/home');
            cookiesService.setCookies(data[0]);
        } else {
            NavigationService.navigateTo('/login');
            ref.setInvalidNotification()
        }
    }

    return service;

}
AuthService.$inject = ['NavigationService', 'cookiesService'];
app.factory('AuthService', AuthService);
app
    // =========================================================================
    // Base controller for common functions
    // =========================================================================
    .controller('homeController', homeController);

function homeController($scope, $cookies, CofigService, $uibModal, QueryService, ApiService) {

    $scope.openAddCartModal = function() {
        var modalInstance = $uibModal.open({
            templateUrl: '/app/components/modal/modal.html',
            controller: 'modalCtrl',
            resolve: {
                tableDetails: function() {
                    return $scope.cartDetails
                },
                json: function() {
                    return "add-cart"
                }
            }
        });

    }

    $scope.saveDetails = function() {
        var query = QueryService.prepareBaseUrl('addDetails')
        ApiService.post(query, $scope.cartDetails).then(function(response) {
            if (response.error) {
                console.log("Getting error in add details")
            }
            if (response.data) {
                console.log("Saved Successfully");
                $scope.cartDetails = [];
            }
        });
    }


    function getConfig(json) {
        CofigService.getConfig(json).then(function(data) {
            $scope.cartView = data
        });
    }

    function init() {
        $scope.cartDetails = [];
        $scope.message = "your seeing this message because your In homeController";
        console.log("iamin homeController::", $scope.message);
        getConfig("home-view");
    }
    init()

};
angular.module('app').run(['$templateCache', function($templateCache) {$templateCache.put('app/header/header.html','<!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script> -->\r\n<div class="jumbotron text-center" ng-show="!getUserName()">\r\n    <div class="header">\r\n        <h2>About the page</h2>\r\n        <span>\r\n    Page is Under Construction\r\n    </span>\r\n    </div>\r\n</div>\r\n<nav class="navbar navbar-inverse" ng-show="getUserName()">\r\n    <div class="container-fluid">\r\n        <div class="navbar-header">\r\n            <img class="navbar-brand brand-css" src="/app/components/header/images/favicon.ico.png" alt="{{menu.brand.name}}" title="{{menu.brand.name}}">\r\n        </div>\r\n        <ul class="nav navbar-nav" ng-repeat="page in menu.Pages">\r\n            <li ng-class="{active:page.isActive == true}" ng-click="activatePage(page)"><a class="active" href="javascript:void(0)">{{page.name}}</a></li>\r\n        </ul>\r\n        <ul class="nav navbar-nav navbar-right ">\r\n            <li><a><span class="glyphicon glyphicon-user "></span>{{" " +getUserName()}}</a></li>\r\n            <li class="dropdown">\r\n                <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0)">{{menu.settings.name}}\r\n                 <span class="caret"></span></a>\r\n                <ul class="dropdown-menu">\r\n                    <li ng-repeat="item in menu.settings.list"><a href="javascript:void(0)" ng-click="$eval(item.action)(item)"><span ng-if="item.class" class="{{item.class}}"></span> {{item.name}}</a></li>\r\n            </li>\r\n            </ul>\r\n    </div>\r\n</nav>');
$templateCache.put('app/home/home.html','<div>\r\n    <label class="available-balance">Available Balance</label>\r\n</div>\r\n<table-view dataconf="home-data" view-conf-name="home-view" update="cartDetails">\r\n</table-view>\r\n<a href="javascript:void(0)" class="btn btn-info btn-lg save-cart" style="float:left" ng-click="saveDetails()" ng-if="cartDetails.length > 0">\r\n          Save\r\n        </a>\r\n<a href="javascript:void(0)" class="btn btn-info btn-lg plus-cart" ng-click="openAddCartModal()">\r\n          <span class="glyphicon glyphicon-plus-sign"></span> Plus\r\n        </a>');
$templateCache.put('app/login/carasole.html','<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>\r\n<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>\r\n<div class="container-fluid">\r\n    <div id="myCarousel" class="carousel slide" data-ride="carousel">\r\n        <!-- Indicators -->\r\n        <ol class="carousel-indicators">\r\n            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>\r\n            <li data-target="#myCarousel" data-slide-to="1"></li>\r\n            <li data-target="#myCarousel" data-slide-to="2"></li>\r\n            <li data-target="#myCarousel" data-slide-to="3"></li>\r\n            <li data-target="#myCarousel" data-slide-to="4"></li>\r\n            <li data-target="#myCarousel" data-slide-to="5"></li>\r\n        </ol>\r\n        <!-- Wrapper for slides -->\r\n        <div class="carousel-inner" style="max-height: 75%">\r\n            <div class="item active">\r\n                <img src="/app/components/login/images/img.jpg" alt="Los Angeles" style="width:100%;">\r\n            </div>\r\n            <div class="item">\r\n                <img src="/app/components/login/images/img1.jpg" alt="Chicago" style="width:100%;">\r\n            </div>\r\n            <div class="item">\r\n                <img src="/app/components/login/images/img2.jpg" alt="New york" style="width:100%;">\r\n            </div>\r\n            <div class="item">\r\n                <img src="/app/components/login/images/img3.jpg" alt="New york" style="width:100%;">\r\n            </div>\r\n            <div class="item">\r\n                <img src="/app/components/login/images/img4.jpg" alt="New york" style="width:100%;">\r\n            </div>\r\n            <div class="item">\r\n                <img src="/app/components/login/images/img5.jpg" alt="New york" style="width:100%;">\r\n            </div>\r\n        </div>\r\n        <!-- Left and right controls -->\r\n        <a class="left carousel-control" data-target="#myCarousel" data-slide="prev">\r\n    <span class="glyphicon glyphicon-chevron-left"></span>\r\n    <span class="sr-only">Previous</span>\r\n  </a>\r\n        <a class="right carousel-control" data-target="#myCarousel" data-slide="next">\r\n    <span class="glyphicon glyphicon-chevron-right"></span>\r\n    <span class="sr-only">Next</span>\r\n  </a>\r\n    </div>\r\n</div>');
$templateCache.put('app/login/Frame_b.html','<div class="row card">\r\n    <div class="col-sm-8">\r\n        <div class="carasole-imp" ng-include="\'/app/components/login/carasole.html\'"></div>\r\n    </div>\r\n    <div class="col-sm-4">\r\n        <div ng-include="\'/app/components/login/login.html\'"></div>\r\n    </div>\r\n</div>');
$templateCache.put('app/login/Frame_c.html','<div style="text-align: center">\r\nDon\'t under estimate the common man\r\n</div>');
$templateCache.put('app/login/login.html','<form class="loginForm" name="form" novalidate>\r\n    <b>Sign in </b>\r\n    <p> to countinue your session</p>\r\n    <div class="input-group form-body">\r\n        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>\r\n        <input type="text" name="username" class="form-control" placeholder="username" ng-model="login.username" required>\r\n    </div>\r\n    <div class="input-group form-body">\r\n        <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>\r\n        <input type="{{showpassword ? \'text\' : \'password\'}}" class="form-control" name="password" placeholder="password" ng-model="login.password" required>\r\n        <!-- <span toggle="#password-field" class="fa fa-fw fa-eye field-icon" ng-click="togglePsw()"> -->\r\n    </div>\r\n    <button value="submit" ng-disabled="form.$invalid" class="form-footer btn btn-info" ng-click="submit()">Submit</button>\r\n    <button value="clear" class="form-footer btn btn-info" ng-click="reset()">Clear</button>\r\n</form>');
$templateCache.put('app/login/loginPage.html','<html>\r\n\r\n<body>\r\n    <div>\r\n        <div class="row frame-b">\r\n            <div ng-include="\'/app/components/login/Frame_b.html\'"></div>\r\n        </div>\r\n        <div class="frame-c">\r\n            <div ng-include="\'/app/components/login/Frame_c.html\'"></div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>');
$templateCache.put('app/mess-details/messDetails.html','<div class="container-fluid msd-filter">\r\n    <date-picker label="Start Date" ng-model="startDate">\r\n    </date-picker>\r\n    <date-picker label="End Date" ng-model="endDate">\r\n    </date-picker>\r\n    <button type="submit" class="btn btn-primary">Search</button>\r\n</div>\r\n<table-view dataconf="msd-data" view-conf-name="msd-view">\r\n</table-view>');
$templateCache.put('app/modal/modal.html','<div>\r\n    <!-- Modal content-->\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">{{modalObj.title}}</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <form name="form" novalidate>\r\n                <div ng-repeat="field in modalObj.fields">\r\n                    <div ng-if="field.type==\'text\'" class="input-group modal-form-item">\r\n                        <label class="input-group-addon">{{field.Label}} <b style="color:red" ng-show="field.isRequired"> *</b></label>\r\n                        <input name="{{field.Label}}" type="text" ng-pattern="/^[a-zA-Z]*$/" class="form-control" placeholder="please enter {{field.Label | lowercase}} details" ng-model="fieldObj[field.Label]" ng-required="field.isRequired">\r\n                    </div>\r\n                    <div ng-if="field.type==\'number\'" class="input-group modal-form-item">\r\n                        <label class="input-group-addon">{{field.Label}} <b style="color:red" ng-show="field.isRequired"> *</b></label>\r\n                        <input name="{{field.Label}}" type="text" ng-pattern="/^[0-9]*$/" class="form-control" placeholder="please enter {{field.Label | lowercase}} details" ng-model="fieldObj[field.Label]" ng-required="field.isRequired">\r\n                    </div>\r\n                    <span style="color:red" ng-show="(form[field.Label].$viewValue!=\'\' && form[field.Label].$invalid) && form[field.Label].$dirty">{{field.errorMsg}}</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="submit" class="btn btn-info" ng-repeat="footer in modalObj.footer" ng-click="$eval(footer.action)(form)" ng-disabled="form.$invalid && footer.type==\'submit\'">{{footer.Label}}</button>\r\n        </div>\r\n    </div>\r\n</div>');
$templateCache.put('app/pendings/pendings.html','<div class="container-fluid pendings-filter">\r\n    <div class="col-md-2">\r\n        <p class="input-group nya-margin">\r\n            <label>Users</label>\r\n            <ol class="nya-bs-select" title="select" ng-model="selectedUser" data-live-search="true">\r\n                <li nya-bs-option="user in users">\r\n                    <a>{{ user.name }}  <span class="glyphicon glyphicon-ok check-mark"></span>      \r\n       \r\n                 </a>\r\n                </li>\r\n            </ol>\r\n        </p>\r\n    </div>\r\n    <div class="col-md-2 margin-left">\r\n        <p class="input-group nya-margin">\r\n            <label>Table type</label>\r\n            <ol class="nya-bs-select" title="select" ng-model="tableType" data-live-search="true">\r\n                <li nya-bs-option="type in tableTypes">\r\n                    <a>{{ type.DisplayLabel }}  <span class="glyphicon glyphicon-ok check-mark"></span>      \r\n       \r\n                 </a>\r\n                </li>\r\n            </ol>\r\n        </p>\r\n    </div>\r\n    <button type="submit" class="btn btn-primary" ng-if="tableType.type == \'getDetails\'">Get details</button>\r\n</div>\r\n<table-view dataconf="user-data" view-conf-name="user-view" ng-if="tableType.type == \'getDetails\'">\r\n</table-view>\r\n<div ng-if="tableType.type == \'addDetails\'">\r\n    <table-view dataconf="add-pendings-data" view-conf-name="add-view">\r\n    </table-view>\r\n    <a href="javascript:void(0)" class="btn btn-info btn-lg plus-cart" ng-click="openAddPendingsModel()">\r\n          <span class="glyphicon glyphicon-plus-sign"></span> Plus\r\n        </a>\r\n</div>');
$templateCache.put('app/directives/html/datepickerTemplate.html','<div class="col-md-3">\r\n    <p class="input-group">\r\n        <label>{{label}}</label>\r\n        <input type="text" class="form-control" uib-datepicker-popup="{{format}}" ng-model="ngModel" is-open="popup.opened" datepicker-options="dateOptions" ng-required="true" close-text="Close" />\r\n        <span class="input-group-btn">\r\n            <button type="button" class="btn btn-default calender-btn" ng-click="openPopup()"><i class="glyphicon glyphicon-calendar"></i></button>\t\r\n          </span>\r\n    </p>\r\n</div>');
$templateCache.put('app/directives/html/tableViewTemplate.html','<div class="container-fluid table-responsive msd-table">\r\n    <table class="table table-bordered table-hover table-striped">\r\n        <thead>\r\n            <tr>\r\n                <th ng-repeat="view in view.columns">{{view.column}}\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody ng-if="tableData.rows.length > 0">\r\n            <tr ng-repeat="row in tableData.rows">\r\n                <td ng-repeat="view in view.columns"><span ng-if="view.type!=\'actions\'">{{row[view.column]}}</span><span ng-if="view.type==\'actions\'" class="table-tools" ng-repeat="icon in view.icons"><i class="{{icon.class}}" ng-click="$eval(icon.action)(row,icon.params)"></i></span></td>\r\n            </tr>\r\n        </tbody>\r\n        <tbody ng-if="tableData.rows.length == 0">\r\n            <tr>\r\n                <td class="text-center no-data-table" colspan="{{view.columns.length}}">{{tableData.noRecardsMsg}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>');}]);
app
    // =========================================================================
    // Base controller for common functions
    // =========================================================================
    .controller('headerCtrL', headerCtrL);

function headerCtrL($scope, cookiesService, CofigService, NavigationService) {
    $scope.activatePage = function(item) {
        _.each($scope.menu.Pages, function(page) {
            if (page.name == item.name) {
                page.isActive = true;
                NavigationService.navigateTo(page.url);
            } else {
                page.isActive = false
            }
        })
    }
    $scope.navigateTo = function(item) {
        NavigationService.navigateTo(item.url);
    }
    $scope.logOut = function() {
        cookiesService.deleteCookie();
    }
    $scope.getUserName = function() {
        return cookiesService.getUserName();
    }

    function init() {
        CofigService.getConfig('menu').then(function(data) {
            $scope.menu = angular.copy(data);
        });
        $(document).ready(function() {
            $(".dropdown-toggle").dropdown();
        });
    }
    init()

};
var NotificationService = function(Notification, SweetAlert) {
    var service = {};

    service.errorNotification = function(message, yaxis, xaxis) {
        Notification.error({ message: message, positionY: yaxis, positionX: xaxis, delay: 1500 });
    }

    service.confirmNotification = function(next) {
        SweetAlert.swal({
                title: "Are you sure?", //Bold text
                text: "Your will not be able to recover this imaginary file!", //light text
                type: "warning", //type -- adds appropiriate icon
                showCancelButton: true, // displays cancel btton
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false, //do not close popup after click on confirm, usefull when you want to display a subsequent popup
                closeOnCancel: false
            },
            function(isConfirm) { //Function that triggers on user action.
                if (isConfirm) {
                    if (next) {
                        next();
                    }
                    SweetAlert.swal("Deleted!");
                } else {
                    SweetAlert.swal("Your file is safe!");
                }
            });
    }

    return service;

}
NotificationService.$inject = ['Notification', 'SweetAlert'];
app.factory('NotificationService', NotificationService);
app
    // =========================================================================
    // Base controller for common functions
    // =========================================================================
    .controller('messDetailsCtrls', messDetailsCtrls);

function messDetailsCtrls($rootScope, $scope) {

    function init() {
        $scope.message = "your seeing this message because your In messDetailsCtrls";
        console.log("iamin messDetailsCtrls::", $scope.message);
        $scope.startDate = new Date();
        $scope.endDate = new Date();
    }
    init()

};
app
    // =========================================================================
    // Base controller for common functions
    // =========================================================================
    .controller('pendingsCtrls', pendingsCtrls);

function pendingsCtrls(CofigService, $scope, $uibModal) {
    function getConfig(json, obj) {
        CofigService.getConfig(json).then(function(data) {
            $scope[obj] = data;
        });
    }

    function initTableType() {
        $scope.tableTypes = [{ "type": "getDetails", "DisplayLabel": "Show Pendings" }, { "type": "addDetails", "DisplayLabel": "Add Pendings" }]
        $scope.tableType = { "type": "getDetails", "DisplayLabel": "Show Pendings" }
    }
    $scope.openAddPendingsModel = function() {
        var modalInstance = $uibModal.open({
            templateUrl: '/app/components/modal/modal.html',
            controller: 'modalCtrl',
            resolve: {
                tableDetails: function() {
                    return $scope.pendingDetails
                },
                json: function() {
                    return "add-pendings"
                }
            }
        });
    }


    function init() {
        $scope.pendingDetails = [];
        getConfig("users-list", "users");
        initTableType();
    }
    init();

};
var datePicker = function() {
    return {
        restrict: 'EA',
        scope: {
            ngModel: "=",
            label: "@"
        },
        templateUrl: '/app/components/directives/html/datepickerTemplate.html',
        link: function(scope, elem, attrs) {
            console.log("::datePicker ::");

            function disabled(data) {
                var date = data.date,
                    mode = data.mode;
                return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);
            }
            scope.openPopup = function() {
                scope.popup.opened = true;
            };
            scope.$watch('ngModel', function() {
                console.log("ngModel:::", scope.ngModel);
            })

            function init() {
                scope.format = 'dd-MMMM-yyyy';
                scope.popup = {
                    opened: false
                };
                console.log(":::lable::", scope.label);
                scope.dateOptions = {
                    dateDisabled: disabled,
                    formatYear: 'yy',
                    maxDate: new Date(2020, 5, 22),
                    minDate: new Date(),
                    startingDay: 1
                };


            }
            init();
        }
    }
}

datePicker.$inject = [];
app.directive('datePicker', datePicker);
/*app.directive("datePicker", ['$state', '$filter', function($state, $filter) {
    return {
        restrict: 'E',
        replace: true,
        templateUrl: '/views/common/table.html',
        scope: {
            schema: '=',
            records: '=',
            updateFn: '&',
            deleteFn: '&',
            view: '&',
            formatter: '&'
        },
        link: function(scope, elem, attrs) {

        }
    }
}])*/
var tableView = function(CofigService, $timeout, $injector, NotificationService) {
    return {
        restrict: 'EA',
        scope: {
            dataconf: "@",
            viewConfName: "@",
            update: "="

        },
        templateUrl: '/app/components/directives/html/tableViewTemplate.html',
        link: function(scope, elem, attrs) {

            function references() {
                var ref = {};
                ref.setTableData = function(data) {
                    scope.tableData = angular.copy(data);
                    scope.update = angular.copy(data.rows);
                };
                ref.getTableData = function() {
                    return scope.tableData;
                };
                return ref;
            }

            scope.$watch("update", function(val) {
                updateTableData();
            }, true)

            function getConfig(json, name) {
                CofigService.getConfig(json).then(function(data) {
                    scope[name] = data;
                });
            }

            function updateTableData() {
                if (scope.tableData && scope.update) {
                    scope.tableData.rows = angular.copy(scope.update);
                }
            }
            scope.edit = function(row, params) {
                console.log("iam in edit");
            }


            scope.delete = function(row, params) {
                NotificationService.confirmNotification(function() {
                    var service = $injector.get(params.service);
                    service[params.method](row, references());
                })

            }


            function init() {
                getConfig(scope.viewConfName, "view");
                getConfig(scope.dataconf, "tableData");
            }
            init();
        }
    }
}

tableView.$inject = ['CofigService', '$timeout', '$injector', 'NotificationService'];
app.directive('tableView', tableView);
var TableService = function() {
    var service = {};

    service.deleteCartItems = function(data, ref) {
        var tableData = ref.getTableData();
        tableData.rows = _.reject(tableData.rows, function(row) {
            return angular.equals(row, data)
        });
        ref.setTableData(tableData);
    }

    return service;

}
TableService.$inject = [];
app.factory('TableService', TableService);
app
    // =========================================================================
    // Base controller for common functions
    // =========================================================================
    .controller('modalCtrl', modalCtrl);

function modalCtrl($scope, tableDetails, json, CofigService, $uibModalInstance, FormValidateService, $filter) {

    function getConfig(json) {
        CofigService.getConfig(json).then(function(data) {
            $scope.modalObj = data
        });
    }
    $scope.addPendingDetails = function() {
        pushTableData();
    }

    $scope.addCartDetails = function() {
        getTotal();
        $scope.fieldObj.date = $filter('date')(new Date(), 'yyyy-MM-dd HH:mm');
        pushTableData();
    }

    function pushTableData() {
        tableDetails.push($scope.fieldObj);
        $scope.fieldObj = {};
        $scope.close();
    }

    $scope.close = function() {
        $uibModalInstance.dismiss('cancel');
    }

    function getTotal() {
        $scope.fieldObj.Quantity = ($scope.fieldObj.Quantity) ? $scope.fieldObj.Quantity : 1;
        $scope.fieldObj.Total = $scope.fieldObj.Quantity * $scope.fieldObj.Price;
    }


    function init() {
        $scope.fieldObj = {}
        getConfig(json);
    };
    init()

};
var FormValidateService = function(NotificationService) {
    var service = {};

    service.isValid = function(form, fields, next) {
        var invalidEntries = _.filter(fields, function(field) { return form[field.Label].$invalid });
        if (invalidEntries.length > 0) {
            NotificationService.errorNotification('Please enter valid details', 'top', 'middle');
        } else if (next) {
            next();
        }
    }

    return service;

}
FormValidateService.$inject = ['NotificationService'];
app.factory('FormValidateService', FormValidateService);
var Interceptor = function() {
    var Interceptor = {

        request: function(config) {
            if (config) {
                // console.log("config::", config);
            }
            return config;
        },

        response: function(config) {
            return config;
        }

    }
    return Interceptor;

}
Interceptor.$inject = [];
app.factory('Interceptor', Interceptor);


app.config(['$httpProvider', function($httpProvider) {
    $httpProvider.interceptors.push('Interceptor');
}]);
var QueryService = function(SERVICEURL) {
    var service = {};

    service.prepareBaseUrl = function(url) {
        return SERVICEURL + url
    }

    return service;

}
QueryService.$inject = ['SERVICEURL'];
app.factory('QueryService', QueryService);